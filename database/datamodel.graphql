type Database {
    id: ID! @unique
    name: String! @unique
    resources: [Resource!]! @relation(name: "DatabaseToResource")
}

type Resource {
    id: ID! @unique
    name: String!
    primaryKeyOwner: String
    primaryKeyTable: String
    primaryKeyColumn: String
    attributes: [Attribute!]! @relation(name: "ResourceToAttributes")
    database: Database! @relation(name: "DatabaseToResource")
}

type Attribute {
    id: ID! @unique
    name: String!
    mergingScript: String
    isProfile: Boolean
    # Parent resource
    resource: Resource @relation(name: "ResourceToAttributes")
    # Children attributes
    attributes: [Attribute!] @relation(name: "AttributeToAttributes")
    # Parent attribute
    attribute: Attribute @relation(name: "AttributeToAttributes")
    # Children input columns
    inputColumns: [InputColumn!] @relation(name: "AttributeToInputColumns")
}

type InputColumn {
    id: ID! @unique
    owner: String
    table: String
    column: String
    script: String
    staticValue: String
    # Children joins
    joins: [Join!] @relation(name: "InputColumnToJoins", onDelete: CASCADE)
    # Parent attribute
    attribute: Attribute! @relation(name: "AttributeToInputColumns")
}

type Join {
    id: ID! @unique
    sourceOwner: String
    sourceTable: String
    sourceColumn: String
    targetOwner: String
    targetTable: String
    targetColumn: String
    # Parent input column
    inputColumn: InputColumn! @relation(name: "InputColumnToJoins")
}
