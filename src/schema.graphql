# import Database, Resource, Attribute from "./generated/prisma.graphql"

type Query {
    databases(where: DatabaseWhereInput): [Database!]!
    resources(where: ResourceWhereInput): [Resource!]!
    attributes(where: AttributeWhereInput): [Attribute!]!
    inputColumns(where: InputColumnWhereInput): [InputColumn!]!
    database(where: DatabaseWhereInput): Database!
    resource(where: ResourceWhereInput): Resource!
    attribute(where: AttributeWhereInput): Attribute!
    inputColumn(where: InputColumnWhereInput): InputColumn!
}

type Mutation {
    updateResource(id: ID!, data: ResourceUpdateInput): Resource!
    updateAttribute(id: ID!, data: AttributeUpdateInput): Attribute!
    updateAttributeNoId(database: String!, resource: String!, attribute: String!, data: AttributeUpdateInput): Attribute!
    updateInputColumn(id: ID!, data: InputColumnUpdateInput): InputColumn!
    deleteInputColumn(id: ID!): InputColumn!
    checkAttribute(database: String!, resource: String!, attribute: String!): Attribute!
}

type Subscription {
    inputColumnSubscription(id: ID!): InputColumnSubscriptionPayload
    attributeSubscription(id: ID!): AttributeSubscriptionPayload
    resourceSubscription(id: ID!): ResourceSubscriptionPayload
    customAttributeSubscription(database: String!, resource: String!, attribute: String!): AttributeSubscriptionPayload
}
