# import Database, Resource, Attribute from "./generated/prisma-binding/prisma.graphql"

type Query {
    allDatabases: [Database!]!
    databases: [Database!]!
    attribute: Attribute!
    availableResources(database: String!): [Resource!]
    availableAttributes(resourceId: ID!): [Attribute!]
    inputColumns(attributeId: ID!): [InputColumn!]
    me: User
}

type Mutation {
    createInputColumnViaAttribute(id: ID!, data: InputColumnCreateInput): Attribute!
    deleteInputColumnViaAttribute(attributeId: ID!, inputColumnId: ID!): Attribute!
    updateInputColumn(id: ID!, data: InputColumnUpdateInput): InputColumn!
    # updateAttributeNoId(database: String!, resource: String!, attributePath: [String!]!, data: AttributeUpdateInput): Attribute!
    # updateAttribute(id: ID!, data: AttributeUpdateInput): Attribute!
    # updateInputColumn(id: ID!, data: InputColumnUpdateInput): InputColumn!
    # updateResource(id: ID!, data: ResourceUpdateInput): Resource!
    # updateJoin(id: ID!, data: JoinUpdateInput): Join!
    # createResourceTreeInDatabase(database: String!, resource: String!): Resource!

    signup(email: String!, password: String!, name: String!): AuthPayload!
    login(email: String!, password: String!): AuthPayload!
}

type Subscription {
    attribute(id: ID!): [InputColumn!]
    inputColumn(id: ID!): InputColumn
    resource(id: ID!): Resource
    join(id: ID!): Join
}

type AuthPayload {
    token: String!
    user: User!
}
